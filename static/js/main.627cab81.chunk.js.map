{"version":3,"sources":["containers/Logo.js","components/Home/Home.js","components/Cast/CastDetails.js","components/Cast/EachCast.js","components/Loader.js","components/Cast/CastCard.js","components/Cast/Cast.js","components/Season/Summary.js","components/Season/Modal.js","components/Season/SeasonCard.js","components/Season/Season.js","components/Episode/EpisodeCard.js","components/Episode/Episode.js","components/NoMatch.js","containers/Main.js","containers/FooterNav.js","components/App.js","serviceWorker.js","index.js","images/logo-brand.png","images/got-font.png"],"names":["Logo","className","href","alt","src","LogoSrc","Home","state","quotes","text","by","currentIndex","this","setState","intervalId","setInterval","autoIndex","interval","clearInterval","from","opacity","marginTop","to","config","delay","props","div","style","GotFont","aria-hidden","items","transform","enter","leave","item","p","cite","title","name","role","Component","CastDetails","details","age","nationality","EachCast","casts","useState","show","setShow","settings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","responsive","breakpoint","map","cast","key","id","onClick","_","find","Loader","CastCard","castInfo","CancelToken","axios","source","abortController","AbortController","fetchData","a","get","cancelToken","token","result","data","isCancel","console","log","message","Error","formatData","birthDay","person","birthday","country","character","image","medium","Date","getFullYear","parseInt","split","filter","str","length","join","replace","then","formattedData","catch","err","cancel","Cast","document","Summary","summary","number","Modal","history","useHistory","back","e","goBack","close","children","SeasonCard","season","modalId","episodeOrder","premiereDate","endDate","imgSrc","closeModal","substring","activeModal","episodes","Season","useEffect","EpisodeCard","index","setIndex","i","episode","width","airdate","airtime","runtime","display","Episode","setEpisode","useParams","ep","match","epNum","url","useRouteMatch","matchedPath","res","loadData","NoMatch","Main","exact","path","component","FooterNav","activeClassName","App","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.627cab81.chunk.js","sourcesContent":["import React from \"react\";\nimport LogoSrc from \"../images/logo-brand.png\";\n\nconst Logo = () => (\n  <nav className=\"navbar fixed-top navbar-dark justify-content-center\">\n    <a href=\"#index\" className=\"navbar-brand\">\n      <img className=\"navbar-brand__logo\" alt=\"Logo\" src={LogoSrc} />\n    </a>\n  </nav>\n);\n\nexport default Logo;\n","import React, { Component } from \"react\";\nimport { Spring, Transition, animated } from \"react-spring/renderprops\";\nimport GotFont from \"../../images/got-font.png\";\n\nclass Home extends Component {\n  state = {\n    quotes: [\n      {\n        text:\n          \"There is only one war that matters. The Great War. And it is here\",\n        by: \"Jon Snow\",\n      },\n      {\n        text:\n          \"Never forget what you are. The rest of the world will not. Wear it like armor, and it can never be used to hurt you.\",\n        by: \"Tyrion Lannister\",\n      },\n      {\n        text: \"There is only one thing we say to death. Not today.\",\n        by: \"Syrio Forel\",\n      },\n    ],\n    currentIndex: 2,\n  };\n\n  autoIndex() {\n    this.setState((state) => {\n      state.currentIndex -= 1;\n      if (state.currentIndex < 0) {\n        state.currentIndex = 2;\n      }\n\n      return {\n        currentIndex: state.currentIndex,\n      };\n    });\n  }\n\n  componentDidMount() {\n    const intervalId = setInterval(() => this.autoIndex(), 10000);\n    this.setState({ intervalId });\n  }\n\n  componentWillUnmount() {\n    const interval = this.state.intervalId;\n    clearInterval(interval);\n  }\n\n  render() {\n    const { quotes, currentIndex } = this.state;\n\n    return (\n      <header className=\"header got-bg\">\n        <div className=\"overlay\">\n          <Spring\n            from={{ opacity: 0, marginTop: \"-5rem\" }}\n            to={{ opacity: 1, marginTop: \"0rem\" }}\n            config={{ delay: 100 }}\n          >\n            {(props) => (\n              <animated.div style={props} className=\"description\">\n                <img className=\"description-img\" src={GotFont} alt=\"got-font\" />\n                <div className=\"card description-card\">\n                  <div className=\"card-body\">\n                    <blockquote className=\"blockquote\">\n                      <div className=\"quote-icon\">\n                        <i className=\"fa fa-quote-left\" aria-hidden=\"true\"></i>\n                      </div>\n\n                      <Transition\n                        items={quotes[currentIndex].text}\n                        from={{ opacity: 0, transform: \"translate(100%, 0)\" }}\n                        enter={{ opacity: 1, transform: \"translate(0%, 0)\" }}\n                        leave={{ opacity: 0, transform: \"translate(-50%, 0)\" }}\n                      >\n                        {(item) => (style) => (\n                          <animated.p style={style} className=\"quote\">\n                            {item}\n                          </animated.p>\n                        )}\n                      </Transition>\n\n                      <footer className=\"card-blockquote blockquote-footer\">\n                        <Transition\n                          items={quotes[currentIndex].by}\n                          from={{ opacity: 0, transform: \"translate(100%, 0)\" }}\n                          enter={{ opacity: 1, transform: \"translate(0%, 0)\" }}\n                          leave={{\n                            opacity: 0,\n                            transform: \"translate(-50%, 0)\",\n                          }}\n                        >\n                          {(item) => (style) => (\n                            <animated.cite title=\"cast\" style={style}>\n                              {item}\n                            </animated.cite>\n                          )}\n                        </Transition>\n                      </footer>\n                    </blockquote>\n                  </div>\n                </div>\n                <a\n                  name=\"youtube-trailer\"\n                  className=\"btn btn-primary\"\n                  href=\"https://www.youtube.com/watch?v=rlR4PJn8b8I\"\n                  role=\"button\"\n                >\n                  Watch Trailer{\" \"}\n                  <i className=\"fa fa-play-circle\" aria-hidden=\"true\"></i>\n                </a>\n              </animated.div>\n            )}\n          </Spring>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Transition, animated } from \"react-spring/renderprops\";\n\nexport const CastDetails = ({ details }) => {\n  return (\n    <Transition\n      items={details}\n      from={{ opacity: 0, transform: \"translate(0, 100%)\" }}\n      enter={{ opacity: 1, transform: \"translate(0, 0%)\" }}\n      leave={{ opacity: 0, transform: \"translate(0, -50%)\" }}\n    >\n      {(item) => (style) => (\n        <animated.div style={style} className=\"cast-card__active\">\n          <ul>\n            <li>Age: {item.age}</li>\n            <li>Nationality: {item.nationality}</li>\n          </ul>\n        </animated.div>\n      )}\n    </Transition>\n  );\n};\n","import React, { useState } from \"react\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { CastDetails } from \"./CastDetails\";\nimport _ from \"lodash\";\n\nexport const EachCast = (props) => {\n  const { casts } = props;\n  const [show, setShow] = useState(0);\n\n  const OpenDetails = (id) => setShow(id);\n  const CloseDetails = () => setShow(0);\n\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 1000,\n    slidesToShow: 4,\n    slidesToScroll: 2,\n    initialSlide: 0,\n    responsive: [\n      {\n        breakpoint: 992,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 2,\n        },\n      },\n      {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n        },\n      },\n      {\n        breakpoint: 578,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n        },\n      },\n    ],\n  };\n\n  const item = casts.map((cast) => (\n    <div key={cast.id} className=\"cast-card\">\n      <img src={cast.src} alt={cast.cast} className=\"cast-card__img\" />\n      <h6\n        className={`cast-card__name ${\n          show === cast.id ? \"cast-card__details\" : \"\"\n        }`}\n      >\n        <span>{cast.cast}</span>\n        <strong>{cast.name}</strong>\n      </h6>\n\n      <div\n        onClick={() =>\n          show === cast.id ? CloseDetails() : OpenDetails(cast.id)\n        }\n        className={`cast-card__icon ${show === cast.id ? \"open\" : \"\"}`}\n      >\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n\n      {show === cast.id && (\n        <CastDetails details={_.find(casts, { id: cast.id })} />\n      )}\n    </div>\n  ));\n\n  return <Slider {...settings}>{item}</Slider>;\n};\n","import React from \"react\";\n\nconst Loader = () => <div className=\"loader\">Loading...</div>;\n\nexport default Loader;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { EachCast } from \"./EachCast\";\nimport _ from \"lodash\";\nimport Loader from \"../Loader\";\n\nexport class CastCard extends Component {\n  state = {\n    castInfo: null,\n  };\n\n  CancelToken = axios.CancelToken;\n  source = this.CancelToken.source();\n  abortController = new AbortController();\n\n  fetchData = async () => {\n    try {\n      let result = await axios.get(\"http://api.tvmaze.com/shows/82/cast\", {\n        cancelToken: this.source.token,\n      });\n      return result.data;\n    } catch (error) {\n      if (axios.isCancel(error)) {\n        console.log(\"Request unsuccessful\", error.message);\n        throw new Error(\"Cancelled\");\n      }\n    }\n  };\n\n  formatData = (data) => {\n    const {\n      person: {\n        id,\n        name,\n        birthday,\n        country: { name: nationality },\n      },\n    } = data;\n    const {\n      character: {\n        name: cast,\n        image: { medium: src },\n      },\n    } = data;\n\n    const birthYear = (birthDay) =>\n      new Date().getFullYear() -\n      parseInt(\n        birthDay\n          .split(\"-\")\n          .filter((str) => str.length >= 3)\n          .join()\n      );\n\n    const pattern = /lady|prince|queen|\"littlefinger\"|lord|ser|king|commander/gi;\n\n    return {\n      id,\n      name,\n      nationality,\n      age: `${birthYear(birthday)} years old`,\n      cast: _.replace(cast, pattern, \"\"),\n      src,\n    };\n  };\n\n  componentDidMount() {\n    this.fetchData()\n      .then((data) => {\n        const formattedData = data.map((data) => this.formatData(data));\n        this.setState({ castInfo: [...formattedData] });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  componentWillUnmount() {\n    this.source.cancel(\"Request cancelled\");\n  }\n\n  render() {\n    const { castInfo } = this.state;\n\n    return !castInfo ? <Loader /> : <EachCast casts={castInfo} />;\n  }\n}\n","import React, { Component } from \"react\";\nimport { CastCard } from \"./CastCard\";\n\nclass Cast extends Component {\n  componentDidMount() {\n    document.title = \"GOT - Cast\"\n  }\n\n  render() {\n    return (\n      <main className=\"got-bg casts\">\n        <div className=\"container\">\n          <div className=\"cast\">\n            <CastCard />\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default Cast;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const Summary = (props) => {\n  const { summary, number } = props;\n\n  return (\n    <div className=\"text-center\">\n      <div className=\"p-2 text-white\">\n        <p>{summary ? summary : \"No Storyline\"}</p>\n        <Link to={`/season${number}/episodes`} className=\"btn btn-primary\">\n          Episodes\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Modal = (props) => {\n  let history = useHistory();\n  let back = (e) => {\n    history.goBack();\n  };\n  return (\n    <div className=\"season-modal\">\n      <div\n        className=\"season-modal_overlay\"\n        onClick={() => {\n          props.close();\n          back();\n        }}\n      ></div>\n      <div className=\"season-modal_content\">{props.children}</div>\n      <button\n        className=\"btn btn-primary season-card__btn\"\n        onClick={() => {\n          props.close();\n          back();\n        }}\n      >\n        <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  );\n};\nexport default Modal;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Summary } from \"./Summary\";\nimport Modal from \"./Modal\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../Loader\";\n\nexport class SeasonCard extends Component {\n  state = {\n    season: null,\n    modalId: 0,\n  };\n\n  CancelToken = axios.CancelToken;\n  source = this.CancelToken.source();\n  abortController = new AbortController();\n\n  fetchData = async () => {\n    try {\n      let result = await axios.get(\"http://api.tvmaze.com/shows/82/seasons\", {\n        cancelToken: this.source.token,\n      });\n      return result.data;\n    } catch (error) {\n      if (axios.isCancel(error)) {\n        console.log(\"Request Unsuccessful\", error.message);\n        throw new Error(\"Cancelled\");\n      }\n    }\n  };\n\n  formatData = (data) => {\n    const {\n      id,\n      number,\n      episodeOrder,\n      premiereDate,\n      endDate,\n      image: { medium: imgSrc },\n      summary,\n    } = data;\n\n    return {\n      id,\n      number,\n      episodeOrder,\n      premiereDate,\n      endDate,\n      imgSrc,\n      summary: summary || \"\",\n    };\n  };\n\n  activeModal(id) {\n    this.setState({ modalId: id });\n  }\n\n  closeModal = () => this.setState({ modalId: 0 });\n\n  componentDidMount() {\n    this.fetchData()\n      .then((data) => {\n        const formattedData = data.map((data) => this.formatData(data));\n        this.setState({ season: [...formattedData] });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  componentWillUnmount() {\n    this.source.cancel(\"Request cancelled\");\n  }\n\n  render() {\n    return (\n      <div className=\"season\">\n        {!this.state.season ? (\n          <Loader />\n        ) : (\n          <div className=\"row\">\n            {this.state.season.map((item) => {\n              const summary = item.summary.replace(/<?\\Wp>/g, \"\");\n\n              return (\n                <div\n                  key={item.id}\n                  className=\"season-card col-lg-3 col-md-4 col-6\"\n                >\n                  <div className=\"card bg-dark text-white\">\n                    <img\n                      className=\"card-img-top img-fluid\"\n                      src={item.imgSrc}\n                      alt={`Season ${item.number}`}\n                    />\n\n                    <div className=\"season-card__body\">\n                      <div className=\"card-body\">\n                        <div className=\"season-info\">\n                          <span>\n                            Premiered: {item.premiereDate.substring(0, 7)}\n                          </span>\n                          <span>Ended: {item.endDate.substring(0, 7)}</span>\n                        </div>\n                        <Link\n                          to={`/seasons/${item.number}`}\n                          className=\"btn btn-primary\"\n                          onClick={() => this.activeModal(item.id)}\n                        >\n                          More\n                        </Link>\n                      </div>\n                    </div>\n                  </div>\n                  {this.state.modalId === item.id && (\n                    <Modal close={this.closeModal}>\n                      <Summary\n                        episodes={item.episodeOrder}\n                        summary={summary}\n                        number={item.number}\n                      />\n                    </Modal>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { useEffect } from \"react\";\nimport { SeasonCard } from \"./SeasonCard\";\n\nconst Season = () => {\n  useEffect(() => {\n    document.title = \"GOT - Season\";\n  });\n\n  return (\n    <main className=\"got-bg seasons\">\n      <div className=\"container\">\n        <SeasonCard />\n      </div>\n    </main>\n  );\n};\n\nexport default Season;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst EpisodeCard = (props) => {\n  const [index, setIndex] = useState(0);\n\n  const increment = () =>\n    index < props.episode.length - 1 && setIndex(index + 1);\n  const decrement = () => index > 0 && setIndex(index - 1);\n  let i = props.episode[index];\n\n  return (\n    <div className=\"episode-card\">\n      <div className=\"card bg-dark text-white\">\n        <div className=\"row no-gutter\">\n          <div className=\"col-auto grid-display\">\n            <img\n              className=\"img-fluid\"\n              src={i.image.medium}\n              alt={`Season ${i.season} Ep ${i.number}`}\n              width=\"100%\"\n            />\n\n            <ul className=\"episode-card_info p-0 m-3\">\n              <li>\n                <span>\n                  <strong>Season</strong>:<small> {i.season}</small>\n                </span>\n                <span>\n                  <strong>Episode</strong>:<small> {i.number}</small>\n                </span>\n              </li>\n              <li>\n                <strong>Airdate</strong>:\n                <small>\n                  {\" \"}\n                  {i.airdate} at {i.airtime}\n                </small>\n              </li>\n              <li>\n                <strong>Runtime</strong>:<small> {i.runtime}</small>\n              </li>\n            </ul>\n\n            <div className=\"episode-card_btn m-3 text-left\">\n              <Link\n                to={`/season${i.season}/episode${i.number - 1}`}\n                onClick={decrement}\n                style={{ display: index === 0 ? \"none\" : \"inline-block\" }}\n                className=\"btn btn-primary my-0\"\n              >\n                Prev\n              </Link>\n              <Link\n                to={`/season${i.season}/episode${i.number + 1}`}\n                onClick={increment}\n                style={{\n                  display:\n                    index === props.episode.length - 1\n                      ? \"none\"\n                      : \"inline-block\",\n                }}\n                className=\"btn btn-primary my-0\"\n              >\n                Next\n              </Link>\n            </div>\n          </div>\n          <div className=\"col episode-body text-left\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">{i.name}</h4>\n              <p className=\"card-text\">\n                {i.summary.replace(/(<?\\Wp>)|(<br>)/g, \"\")}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default EpisodeCard;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport { Link, useParams, useRouteMatch, Redirect } from \"react-router-dom\";\nimport EpisodeCard from \"./EpisodeCard\";\nimport Loader from \"../Loader\";\n\nconst Episode = (props) => {\n  const [episode, setEpisode] = useState(null);\n  let { season, ep } = useParams();\n  let number = parseInt(season.match(/\\d+/g).join());\n  let epNum = ep && parseInt(ep.match(/\\d+/g).join());\n  let { url } = useRouteMatch();\n  let path = `/season${number}/episode${epNum}`;\n  const matchedPath = url === path || !ep ? true : false;\n\n  useEffect(() => {\n    document.title = `GOT - S${number} E${epNum || 1}`;\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n\n    const loadData = async () => {\n      try {\n        let res = await axios.get(\"http://api.tvmaze.com/shows/82/episodes\", {\n          cancelToken: source.token,\n        });\n        let data = _.filter(res.data, [\"season\", number]);\n        setEpisode(data);\n      } catch (e) {\n        if (axios.isCancel(e)) {\n          console.log(\"Cancelled\");\n        } else {\n          throw e;\n        }\n      }\n    };\n\n    loadData();\n\n    return () => {\n      source.cancel();\n    };\n  }, [number, epNum]);\n\n  return (\n    <div>\n      {matchedPath ? (\n        <main className=\"got-bg episode\">\n          {!episode ? (\n            <Loader />\n          ) : (\n            <div className=\"container\">\n              <div className=\"text-left\">\n                <Link to=\"/seasons\" className=\"m-0 btn btn-primary back-btn\">\n                  Back\n                </Link>\n              </div>\n\n              <EpisodeCard episode={episode} />\n            </div>\n          )}\n        </main>\n      ) : (\n        <Redirect from={url} to=\"/404\" />\n      )}\n    </div>\n  );\n};\n\nexport default Episode;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NoMatch = (props) => {\n  return (\n    <section className=\"page_404\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-12 \">\n            <div className=\"col-sm-10 col-sm-offset-1  text-center\">\n              <div className=\"four_zero_four_bg\">\n                <h1 className=\"text-center \">404</h1>\n              </div>\n\n              <div className=\"contant_box_404\">\n                <h3 className=\"h2\">Look like you're lost</h3>\n\n                <Link to=\"/home\" className=\"link_404\">\n                  Go to Home\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default NoMatch;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Home from \"../components/Home/Home\";\nimport Cast from \"../components/Cast/Cast\";\nimport Season from \"../components/Season/Season\";\nimport Episode from \"../components/Episode/Episode\";\nimport NoMatch from \"../components/NoMatch\";\n\nconst Main = (props) => (\n  <Switch>\n    <Route exact path=\"/home\" component={Home} />\n    <Redirect exact from=\"/\" to=\"/home\" />\n    <Route path=\"/casts\" component={Cast} />\n    <Route path=\"/seasons\" component={Season} />\n    <Redirect from=\"/season\" to=\"/seasons\" />\n    <Route path=\"/:season/episode1\" component={Episode} />\n    <Redirect from=\"/:season/episodes\" to=\"/:season/episode1\" />\n    <Route path=\"/:season/:ep\" component={Episode} />\n    <Route component={NoMatch} />\n  </Switch>\n);\n\nexport default Main;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst FooterNav = () => (\n  <footer className=\"footer fixed-bottom\">\n    <ul className=\"nav justify-content-center\">\n      <li className=\"nav-item\">\n        <NavLink\n          className=\"nav-link\"\n          activeClassName=\"nav-link__active\"\n          to=\"/casts\"\n        >\n          Cast\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink\n          className=\"nav-link\"\n          activeClassName=\"nav-link__active\"\n          to=\"/seasons\"\n        >\n          Seasons\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" activeClassName=\"nav-link__active\" to=\"/home\">\n          Home\n        </NavLink>\n      </li>\n    </ul>\n  </footer>\n);\n\nexport default FooterNav;\n","import React from 'react';\nimport '../scss/main.scss';\nimport Logo from '../containers/Logo';\nimport Main from '../containers/Main';\nimport FooterNav from '../containers/FooterNav';\n\n\nfunction App() {\n  return (\n    <div className=\"wrapper text-center\">\n      <Logo />\n      <Main />\n      <FooterNav />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo-brand.3ba2c67b.png\";","module.exports = __webpack_public_path__ + \"static/media/got-font.2d81a83e.png\";"],"sourceRoot":""}